note

BUILTINS

	[ðŸŸ§]=  echo with option -n
		// echo "$ $ $ $ $SHELL----------$LOL.......$123TEST"

	[âœ…]=  pwd with no options 

	[âœ…]=  env with no options or arguments

	[âœ…]=  export with no options
		// export 1 \\A

	[âœ…]=  cd with only a relative or absolute path
		add cd -
		add cd ~/path

	[âœ…]=  exit with no options
		// when exiting our ./minishell, exit should be the exit code of the last cmd executed

ENV

	[âœ…]=  $variable est censÃ© etre remplace par le contenu de la variable si elle existe // env+var

$_ variable not printable by export function && not assignable

export _=yesssssssssssssssssssssssssssssssssssssssssssssssss

_____________________________________________


		Lire le manuel de bash --posix

EXEC	âœ… convertir env en char ** et les arguments en char ** aussi pour execve
		si pipe est, faire les commandes dans des fork


gere les redirections + here doc âœ… âœ… âœ…

	[âœ…]=  < should redirect input.
	[âœ…]=  > should redirect output.

	[ ]=  << should be given a delimiter, then read the input until a line containing the delimiter is seen. However, it doesnt have to update the history!
	[âœ…]=  >> should redirect output in append mode.

gerer les pipes | 

	[âœ…]=  reproduire le comportement du pipe et gere peu importe le nombre de cmd


extra

	[ ]=  CHANGER LA variable $_ en fonction de la derniere ligne de commande tapee
		PBLM with $_ variable
	

note

to disable every readline leaks //
	v --suppressions=suppress.supp ./minishell


if we launch minishell without env
	env -i ./minishell
		exit ne fonctionne pas quand pas d`env

	inbennou
		\\ ne pas open avant de fork sinon les enfants heritent de bcp de choses qu`il faudra close / free
		// si un des infiles n`existe pas: msg d`erreur et pas d`exec
	
	tajavon
		ls <                     c <c | <c>e | cat
